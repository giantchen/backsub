//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace TestOkApi.localhost {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://fuzzy.bnu.edu.cn/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ListAllPdasOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePdaOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::TestOkApi.Properties.Settings.Default.TestOkApi_localhost_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ListAllPdasCompletedEventHandler ListAllPdasCompleted;
        
        /// <remarks/>
        public event UpdatePdaCompletedEventHandler UpdatePdaCompleted;
        
        /// <remarks/>
        public event AddImageCompletedEventHandler AddImageCompleted;
        
        /// <remarks/>
        public event GetImageCompletedEventHandler GetImageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fuzzy.bnu.edu.cn/ListAllPdas", RequestNamespace="http://fuzzy.bnu.edu.cn/", ResponseNamespace="http://fuzzy.bnu.edu.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Pda[] ListAllPdas() {
            object[] results = this.Invoke("ListAllPdas", new object[0]);
            return ((Pda[])(results[0]));
        }
        
        /// <remarks/>
        public void ListAllPdasAsync() {
            this.ListAllPdasAsync(null);
        }
        
        /// <remarks/>
        public void ListAllPdasAsync(object userState) {
            if ((this.ListAllPdasOperationCompleted == null)) {
                this.ListAllPdasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAllPdasOperationCompleted);
            }
            this.InvokeAsync("ListAllPdas", new object[0], this.ListAllPdasOperationCompleted, userState);
        }
        
        private void OnListAllPdasOperationCompleted(object arg) {
            if ((this.ListAllPdasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListAllPdasCompleted(this, new ListAllPdasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fuzzy.bnu.edu.cn/UpdatePda", RequestNamespace="http://fuzzy.bnu.edu.cn/", ResponseNamespace="http://fuzzy.bnu.edu.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdatePda(string pdaName, string ipAddr) {
            object[] results = this.Invoke("UpdatePda", new object[] {
                        pdaName,
                        ipAddr});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePdaAsync(string pdaName, string ipAddr) {
            this.UpdatePdaAsync(pdaName, ipAddr, null);
        }
        
        /// <remarks/>
        public void UpdatePdaAsync(string pdaName, string ipAddr, object userState) {
            if ((this.UpdatePdaOperationCompleted == null)) {
                this.UpdatePdaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePdaOperationCompleted);
            }
            this.InvokeAsync("UpdatePda", new object[] {
                        pdaName,
                        ipAddr}, this.UpdatePdaOperationCompleted, userState);
        }
        
        private void OnUpdatePdaOperationCompleted(object arg) {
            if ((this.UpdatePdaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePdaCompleted(this, new UpdatePdaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fuzzy.bnu.edu.cn/AddImage", RequestNamespace="http://fuzzy.bnu.edu.cn/", ResponseNamespace="http://fuzzy.bnu.edu.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddImage([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] date) {
            object[] results = this.Invoke("AddImage", new object[] {
                        date});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddImageAsync(byte[] date) {
            this.AddImageAsync(date, null);
        }
        
        /// <remarks/>
        public void AddImageAsync(byte[] date, object userState) {
            if ((this.AddImageOperationCompleted == null)) {
                this.AddImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddImageOperationCompleted);
            }
            this.InvokeAsync("AddImage", new object[] {
                        date}, this.AddImageOperationCompleted, userState);
        }
        
        private void OnAddImageOperationCompleted(object arg) {
            if ((this.AddImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddImageCompleted(this, new AddImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fuzzy.bnu.edu.cn/GetImage", RequestNamespace="http://fuzzy.bnu.edu.cn/", ResponseNamespace="http://fuzzy.bnu.edu.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetImage(long imageId) {
            object[] results = this.Invoke("GetImage", new object[] {
                        imageId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImageAsync(long imageId) {
            this.GetImageAsync(imageId, null);
        }
        
        /// <remarks/>
        public void GetImageAsync(long imageId, object userState) {
            if ((this.GetImageOperationCompleted == null)) {
                this.GetImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageOperationCompleted);
            }
            this.InvokeAsync("GetImage", new object[] {
                        imageId}, this.GetImageOperationCompleted, userState);
        }
        
        private void OnGetImageOperationCompleted(object arg) {
            if ((this.GetImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageCompleted(this, new GetImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fuzzy.bnu.edu.cn/")]
    public partial class Pda {
        
        private string nameField;
        
        private string ipAddrField;
        
        private System.DateTime lastUpdateField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string IpAddr {
            get {
                return this.ipAddrField;
            }
            set {
                this.ipAddrField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdate {
            get {
                return this.lastUpdateField;
            }
            set {
                this.lastUpdateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void ListAllPdasCompletedEventHandler(object sender, ListAllPdasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListAllPdasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListAllPdasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Pda[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Pda[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void UpdatePdaCompletedEventHandler(object sender, UpdatePdaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePdaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePdaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void AddImageCompletedEventHandler(object sender, AddImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetImageCompletedEventHandler(object sender, GetImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591